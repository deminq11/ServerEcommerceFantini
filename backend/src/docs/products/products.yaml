info:
  title: Your API Title
  version: 1.0.0
tags:
  - name: Products
paths:
  /api/products:
    get:
      summary: Get a list of products (Public).
      tags: [Products]
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: Limit the number of results.
        - name: page
          in: query
          schema:
            type: integer
          description: Page number.
        - name: sort
          in: query
          schema:
            type: string
          description: Sorting criteria (e.g., '1' for ascending price, '-1' for descending, or JSON object).
        - name: query
          in: query
          schema:
            type: string
          description: Query criteria in JSON format.
      responses:
        '200':
          description: Products found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalDocs:
                    type: integer
                  pagingCounter:
                    type: integer
                  hasNextPage:
                    type: boolean
                  hasPrevPage:
                    type: boolean
                  limit:
                    type: integer
                  nextPage:
                    type: integer
                  page:
                    type: integer
                  prevPage:
                    type: integer
                  totalPages:
                    type: integer
    post:
      summary: Create a new product (Admin only).
      tags: [Products]
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request (e.g., invalid input).
        '401':
            description: Unauthorized.
        '403':
            description: Forbidden.
  /api/products/{pid}:
    get:
      summary: Get a product by ID (Public).
      tags: [Products]
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found.
    put:
      summary: Update a product (Admin only).
      tags: [Products]
      security:
        - cookieAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found.
        '400':
          description: Bad Request.
        '401':
            description: Unauthorized.
        '403':
            description: Forbidden.
    delete:
      summary: Delete a product (Admin only).
      tags: [Products]
      security:
        - cookieAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully.
        '404':
          description: Product not found.
        '401':
            description: Unauthorized.
        '403':
            description: Forbidden.
components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Product title.
        description:
          type: string
          description: Product description.
        price:
          type: number
          description: Product price.
        code:
          type: string
          description: Unique product code.
        status:
          type: boolean
          default: true
          description: Product status (true for active).
        stock:
          type: number
          default: 10
          description: Product stock quantity.
        category:
          type: string
          default: "Electronica"
          description: Product category.
        thumbnails:
          type: array
          items:
            type: string
          description: Array of thumbnail URLs.
      required:
        - title
        - price
        - code
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token